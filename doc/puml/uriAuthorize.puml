@startuml

client --> client: 基于 RBAC 的 uri 访问权限控制

client -> UriAuthorizationAnnotationInterceptor: 1. /test/permission/1
UriAuthorizationAnnotationInterceptor --> UriAuthorizationAnnotationInterceptor: 1.1 preHandle(request, response, handler)
activate UriAuthorizationAnnotationInterceptor
UriAuthorizationAnnotationInterceptor --> UriAuthorizationAnnotationInterceptor: 1.2 判断handler是否为HandlerMethod类型\n\
如果不是直接返回 true
alt handler不是HandlerMethod类型, 允许访问
UriAuthorizationAnnotationInterceptor -> PermissionController: 1.2.1 允许访问
PermissionController --> PermissionController: 1.2.2 后续流程略。。。
else handler是HandlerMethod类型
UriAuthorizationAnnotationInterceptor --> UriAuthorizationAnnotationInterceptor: 1.3 UriAuthorize methodAnnotation =\n\
getMethodAnnotation(UriAuthorize.class)
alt methodAnnotation = null, 允许访问
UriAuthorizationAnnotationInterceptor -> PermissionController: 1.3.1 允许访问
PermissionController --> PermissionController: 1.3.2 后续流程略。。。
else methodAnnotation != null
participant AbstractUriAuthorizeService #ff9800
UriAuthorizationAnnotationInterceptor -> AbstractUriAuthorizeService: 1.4 hasPermission\n\
(request, authentication, methodAnnotation.value())
activate AbstractUriAuthorizeService
AbstractUriAuthorizeService --> UriAuthorizationAnnotationInterceptor: 1.4.1 返回 hasPermission(boolean)
deactivate AbstractUriAuthorizeService
alt hasPermission == true, 允许访问
UriAuthorizationAnnotationInterceptor -> PermissionController: 1.4.2 允许访问
PermissionController --> PermissionController: 1.4.3 后续流程略。。。
else hasPermission == false, 不允许访问
UriAuthorizationAnnotationInterceptor -> AbstractUriAuthorizeService: 1.4.2 handlerError\n\
(HttpStatus.FORBIDDEN.value(), response)
AbstractUriAuthorizeService --> client: 1.4.3 返回错误消息
end
end
end

deactivate UriAuthorizationAnnotationInterceptor

client --> client: 基于 RBAC 的 uri 访问权限控制流程结束

== API ==
note over AbstractUriAuthorizeService: \n\
实现 getRolesAuthorities() 方法\n\
获取角色的 uri 的权限 map\n\
返回值为: Map<role, Map<uri, UriResourcesDO>>;\n\
在需要的权限设置的方法上添加\n\
@UriAuthorize("/test/permission:add")注释\n\
即可实现基于 RBAC 的 uri 访问权限控制

@enduml