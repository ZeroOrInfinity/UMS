@startuml

client --> client: OAuth2登录注册流程开始
alt 登录注册失败
client -> SocialAuthenticationFilter: 1 跳转到 \n/Authentication/social

SocialAuthenticationFilter -> SocialAuthenticationSignUpFilter: 1.1 doFilter()
activate SocialAuthenticationSignUpFilter
SocialAuthenticationSignUpFilter --> SocialAuthenticationSignUpFilter: 1.2\n attemptAuthService()
activate SocialAuthenticationSignUpFilter
SocialAuthenticationSignUpFilter -> ProviderManager: 1.2.1\n authenticate(authRequest)
activate SocialAuthenticationSignUpFilter
activate ProviderManager
ProviderManager -> SocialAuthenticationSignUpProvider: 1.2.1.1\n authenticate(token)
activate SocialAuthenticationSignUpProvider
SocialAuthenticationSignUpProvider --> SocialAuthenticationSignUpProvider: 1.2.1.1.1\n authenticate(token)
activate SocialAuthenticationSignUpProvider
participant SocialOAuth2AuthenticationService #ff9800
SocialAuthenticationSignUpProvider -> SocialOAuth2AuthenticationService: 1.2.1.1.1.1\n user=loadUserByUserId(id)

SocialOAuth2AuthenticationService --> SocialAuthenticationSignUpProvider: 1.2.1.1.2\n user!=null
SocialAuthenticationSignUpProvider --> ProviderManager: 1.2.1.2 抛出\n RegisterUserFailureException\n("Username used")
ProviderManager --> SocialAuthenticationSignUpFilter: 1.2.2 抛出\n RegisterUserFailureException\n("Username used")
SocialAuthenticationSignUpFilter -> SocialAuthenticationFailureHandler: 1.3 抛出\n RegisterUserFailureException\n("Username used")
SocialAuthenticationFailureHandler --> client: 1.4 根据LoginType类型\n返回 JSON 或 HTML 格式的错误信息
else 登录注册成功
SocialOAuth2AuthenticationService --> SocialAuthenticationSignUpProvider: 1.2.1.1.2\n user=null
SocialAuthenticationSignUpProvider -> SocialOAuth2AuthenticationService: 1.2.1.1.2.1\n user=registerUser()
activate SocialAuthenticationSignUpProvider
SocialOAuth2AuthenticationService -> ProviderSignInUtils: 1.2.1.1.2.1.1\n doPostSignUp()
activate ProviderSignInUtils
activate SocialOAuth2AuthenticationService
ProviderSignInUtils -> OAuthJdbcUsersConnectionRepository: 1.2.1.1.2.1.1.1\n addConnection()
OAuthJdbcUsersConnectionRepository --> ProviderSignInUtils: 1.2.1.1.2.1.2 返回
ProviderSignInUtils --> SocialOAuth2AuthenticationService: 1.2.1.1.2.2 返回
deactivate SocialOAuth2AuthenticationService
deactivate ProviderSignInUtils
SocialOAuth2AuthenticationService --> SocialAuthenticationSignUpProvider: 1.2.1.1.3\n 返回user
deactivate SocialAuthenticationSignUpProvider

deactivate SocialAuthenticationSignUpProvider
SocialAuthenticationSignUpProvider --> ProviderManager: 1.2.1.2\n 返回user
deactivate ProviderManager
deactivate SocialAuthenticationSignUpProvider
ProviderManager --> SocialAuthenticationSignUpFilter: 1.2.3 返回user
deactivate SocialAuthenticationSignUpFilter
deactivate SocialAuthenticationSignUpFilter
SocialAuthenticationSignUpFilter --> client: 1.5 注册成功能，\n返回 RedirectUrl 或 \nDefaultSuccessUrl
deactivate SocialAuthenticationSignUpFilter
end
client --> client: OAuth2登录注册流程结束

== API ==
note over SocialOAuth2AuthenticationService: 对 OAuth2AuthenticationService 的扩展. 通过覆写 buildReturnToUrl(request)方法\n\
使 social 支持通过统一的回调地址路由到多个回调地址，如要修改此方法逻辑，\n请在实现 BaseOAuth2ConnectionFactory时\n\
覆写buildReturnToUrl(HttpServletRequest,Set)功能：修改RedirectUrl到统一的回调地址\n\
覆写generateState(authCallbackPath)功能：加密url到state\n\
同时覆写 RedirectUrlHelper.decodeRedirectUrl(state)功能：从state解密出正式回调地址
@enduml