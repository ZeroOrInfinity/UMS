server:
  port: 9090

spring:
  profiles:
    active: dev
  # mysql
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/ums?useSSL=false&useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
  # thymeleaf
  thymeleaf:
    encoding: utf-8
    prefix: classpath:/templates/
    suffix: .htm
    servlet:
      content-type: text/html;charset=UTF-8
  # jackson
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  # session 简单配置
  session:
    # session 存储模式设置, 要导入相应的 spring-session 类的依赖, 默认为 none, 分布式服务应用把 session 放入 redis 等中间件
    store-type: none
    # session 过期时间
    timeout: PT300s

ums:
  client:
    # 登录页(必须自己实现)
    login-page: /login
    # 登录失败页(必须自己实现)
    failure-url: /login
    # 设置登录后返回格式(REDIRECT 与 JSON): 默认 JSON
    login-process-type: redirect
    # 设置处理登录表单的 uri，不需要用户实现此 uri，由 Spring security 自动实现， 默认为 /authentication/form
    login-processing-url: /authentication/form
    # 登录成功页(必须自己实现)
    success-url: /
    # 设置登出 url, 默认为 /logout
    logout-url: /logout
    # 设置登出后跳转的 url(必须自己实现), 默认为 /login
    logout-success-url: /login
    # 设置登录时用户名的 request 参数名称, 默认为 username
    usernameParameter: username
    # 设置登录时用户密码的 request 参数名称, 默认为 password
    passwordParameter: password
    # 登录后是否利用 Referer 进行跳转, 默认为: true
    useReferer: true
    # 设置由客户端决定认证成功要跳转的 url 的 request 参数名称, 默认为 redirectTargetUrl
    targetUrlParameter: redirectTargetUrl
    # 不需要认证的静态资源 urls, 例如: /resources/**, /static/**
    ignoring-urls:
      - /static/**
    # 不需要认证的 uri(可以带 HttpMethod 后缀; 用:隔开), 例如: /user/** 或 /user/**:post, 默认为 空 Set.
    permit-urls:
      - /**/*.html:GET
      - /login2:GET

    # =============== login routing 功能: 解决跳转登录成功后不能跳转原始请求的问题 ===============

    # 是否开启根据不同的uri跳转到相对应的登录页, 默认为: false, 当为 true 时还需要配置 loginUnAuthenticationRoutingUrl 和 authRedirectSuffixCondition
    open-authentication-redirect: true
    # 当请求需要身份认证时，默认跳转的url 会根据 authJumpSuffixCondition 条件判断的认证处理类型的 url，默认实现 /authentication/require,
    # 当 openAuthenticationRedirect = true 时生效.
    login-un-authentication-routing-url: /authentication/require
    # 设置 uri 相对应的跳转登录页, 例如：key=/**: value=/login.html, 用等号隔开key与value, 如: /**=/login.html, 默认为空.
    # 当 openAuthenticationRedirect = true 时生效.
    # 支持通配符, 匹配规则： /user/aa/bb/cc.html 匹配 pattern：/us?r/**/*.html, /user/**, /user/*/bb/c?.html, /user/**/*.*.
    # 规则具体看 AntPathMatcher.match(pattern, path)
    auth-redirect-suffix-condition:
      - '/hello=/login2'
      - '/user/**=/login'
      - '/order/**=/login'
      - '/file/**=/login'
      - '/social/**=/signIn.html'

  # 验证码配置
  # 同一个 uri 由多种验证码同时配置, **优先级**如下:
  #  `SMS > CUSTOMIZE > SELECTION > TRACK > SLIDER > IMAGE`
  codes:
    # 图片验证码
    image:
      # 设置需要图片验证码认证的 uri(必须是非 GET 请求)，多个 uri 用 “-” 或 ","号分开支持通配符，如：/hello,/user/*；默认为 /authentication/form
      auth-urls:
        - /authentication/form
      request-param-image-code-name: imageCode

  # =============== 第三方登录配置: social ===============
  social:
    # 第三方登录用户数据库表的字段 key 与 secret 加密专用密码
    text-encryptor-password: 7ca5d913a17b4942942d16a974e3fecc
    # 第三方登录用户数据库表的字段 key 与 secret 加密专用 salt
    text-encryptor-salt: cd538b1b077542aca5f86942b6507fe2
    # 第三方登录页面(必须自己实现)， 默认为 /signIn.html
    sign-in-url: /signIn
    # 第三方登录用户授权失败跳转页面(必须自己实现)， 默认为 /signIn.html
    failure-url: /signIn
    # 第三方登录回调的域名
    domain: http://www.dcenter.top
    ####### 第三方登录绑定相关
    # 第三方登录绑定页面(必须自己实现)， 默认为 /banding.html
    banding-url: /banding
    # 第三方登录用户授权成功跳转页面(必须自己实现)，默认为 /signUp.html， 用户必需设置
    sign-up-url: /signUp

    # 从第三方服务商获取的信息
    qq:
      # 用户设置 true 时，{providerId}第三方登录自动开启，默认为 false
      enable: false
      app-id:
      app-secret:
      # redirectUrl 默认直接由 domain/servletContextPath/callbackUrl/providerId(ums.social.[qq/wechat/gitee/weibo])组成
      # redirect-url: http://www.dcenter.top/demo/auth/callback/qq
    gitee:
      # 用户设置 true 时，{providerId}第三方登录自动开启，默认为 false
      enable: true
      app-id: your app id
      app-secret: your app secret
    weixin:
      # 用户设置 true 时，{providerId}第三方登录自动开启，默认为 false
      enable: false
      app-id:
      app-secret:
    weibo:
      # 用户设置 true 时，{providerId}第三方登录自动开启，默认为 false
      enable: false
      app-id:
      app-secret:

---
spring:
  profiles: dev
  thymeleaf:
    cache: false
  mvc:
    throw-exception-if-no-handler-found: true


debug: true
server:
  servlet:
    context-path: /demo
